"""Create employee_day_offs table

Revision ID: 693df14f24cf
Revises: 186657bcc8c3
Create Date: 2025-10-27 19:32:57.363363

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '693df14f24cf'
down_revision: Union[str, Sequence[str], None] = '186657bcc8c3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('employee_day_offs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.UUID(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_employee_day_offs_id'), 'employee_day_offs', ['id'], unique=False)
    op.create_table('employee_one_on_ones',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('employee_id', sa.UUID(), nullable=False),
    sa.Column('data_agendada', sa.Date(), nullable=False),
    sa.Column('data_realizada', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('notas', sa.Text(), nullable=True),
    sa.Column('pdi_alinhado', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_employee_one_on_ones_employee_id'), 'employee_one_on_ones', ['employee_id'], unique=False)
    op.create_table('employee_pdi_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('employee_id', sa.UUID(), nullable=False),
    sa.Column('titulo', sa.String(length=120), nullable=False),
    sa.Column('descricao', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('data_planejada', sa.Date(), nullable=False),
    sa.Column('data_realizada', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_employee_pdi_logs_employee_id'), 'employee_pdi_logs', ['employee_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_employee_pdi_logs_employee_id'), table_name='employee_pdi_logs')
    op.drop_table('employee_pdi_logs')
    op.drop_index(op.f('ix_employee_one_on_ones_employee_id'), table_name='employee_one_on_ones')
    op.drop_table('employee_one_on_ones')
    op.drop_index(op.f('ix_employee_day_offs_id'), table_name='employee_day_offs')
    op.drop_table('employee_day_offs')
    # ### end Alembic commands ###
